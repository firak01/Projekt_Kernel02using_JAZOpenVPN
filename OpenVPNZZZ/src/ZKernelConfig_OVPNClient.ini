#Merke: Eine Ini - Datei muss UTF-8 ohne BOM sein UND einen Zeilenumbruch am Ende haben

[OVPN!01]
#Produktivsystem
KernelLogPath=c:\fglKernel\KernelLog
KernelLogFile=ZKernelLog_ClientOVPN.txt

######## Modulkonfiguration ##############
;OpenVPN, weist auf das gleiche File
KernelConfigPath=<z:Null/>
KernelConfigFile=ZKernelConfig_OVPNClient.ini

;TODOGOON 20210203: Hier verkürzt auch einen Aliaswerte anbieten für den Modulnamen
;IP-Auslese-Dialogbox als Modul
KernelConfigPathuse.openvpn.clientui.component.IPExternalRead.DlgIPExternalOVPN=<z:Null/>
KernelConfigFileuse.openvpn.clientui.component.IPExternalRead.DlgIPExternalOVPN=ZKernelConfig_OVPNClient.ini

;Einstellungs-Dialogbox als Modul
KernelConfigPathuse.openvpn.component.shared.adjustment.DlgAdjustmentOVPN=<z:Null/>
KernelConfigFileuse.openvpn.component.shared.adjustment.DlgAdjustmentOVPN=ZKernelConfig_OVPNClient_DlgAdjustment.ini

;Beim ausf?hren der load-methode soll nach dem Hinzufuegen des TrayIcons, sofort schon mit dem Connect begonnen werden.
;1 Mache das, 0 Mache das nicht
ConnectOnStart=0

;1=Enable port scan.
;Das Problem dabei ist, dass auf meinem Server dann teilweise die Scanns nicht mehr moeglich sind.
PortScanEnabled=0



####### Programmkonfigurationen ##########
### Programmkonfigurationen statischer Name
#Auslesen der Adresse aus dem Web
ProgIPReader=OVPN!01_IP-READER

#Finden der OVPN Konfigurationsfiles
ProgConfigHandler=OVPN!01_Config

#Setzen von Werten in die OVPNKonfigurationsfiles
ProgConfigValues=OVPN!01_ConfigValues

#Ggfs anstellen eines Proxys
ProgProxyHandler=OVPN!01_Proxy

#Pruefen der OVPN Verbindung
ProgVPNCheck=OVPN!01_Check

#Scannen der offenen Ports
ProgPortScan=OVPN!01_Scan

### Programmkonfiguration(en) (per Aliasnamen)
# Wenn in diesem File die Module definiert sind, dann koennen hier auch die einzelnen Programme der Module definiert werden.
#
# Dieser Klassenname kann als Programname fuer eine Section verwendet werden.
# Es ist moeglich Aliaswerte zu definieren (die dann in die Section kommen).
# Schema: Klassenname oder Aliasname = Aliaswert
# Der Vorteil von Aliasnamen ist, das sie fuer mehrere 'Programme' verwendet werden koennen.
#
#Merke in dem Aliasnamen darf kein Semikolon auftauchen, sonst wird der Eintrag ab dem Semikolon als Kommentar gesehen
#Merke in dem Aliasnamen darf kein Unterstrich auftauchen, sonst wird der Teil hinter dem Unterstrick als Programname gesehen

;Das Panel selbst, zum Vorbelegen der Werte...
use.openvpn.clientui.component.IPExternalRead.PanelDlgIPExternalContentOVPN=IP-ClientContext
;Der Button zum Refreshen der Werte aus dem Web.
use.openvpn.clientui.component.IPExternalRead.ProgramIPContentOVPN=IP-ClientContext

;Der OK-Button zur Uebernahme des Werts in die INI-Datei
use.openvpn.clientui.component.IPExternalRead.ProgramIpWeb2iniOVPN=IP-ClientContext

;Das Panel für den Navigator im Menüpunkt "Einstellungen", wird in einer anderen Konfigurationsdatei definiert
;use.openvpn.component.shared.adjustment.PanelDlgAdjustmentNavigatorOVPN=AdjustmentNavigator



# Testprogramme, hier werden Aliasnamen definiert.
#
# Merke:
# Jeder Test ist als eigenes Programm definiert. D.h. Er hat in dieser Datei eine eigene Section.
# Das ist ein feststehender Name, der verwendet werden muss, wenn der Context aus dieser Configuration geholt werden soll.


[OVPN!01_IP-READER]
;Auszulesende Web-Seite
;URL2Read=http://fgl.homepage.t-online.de/pagIPLinkFGL.html
;fuer Debug und Testzwecke
;URL2Read=http://fgl.homepage.t-online.de/debug/pagIPLinkFGL.html
;URL2Read=file:///<Z>[ProgPageCreate]CreationDirectory</Z>\\<Z>[ProgPageCreate]CreationFile</Z>
URL2Read=<Z>[IP-ClientContext]URL2Read</Z>
;URL2Read=file:///c:\1fgl\Workspace\Eclipse3FGL\OpenVPNZZZ\pagIPLinkFGL4Debug.html
;URL2Read=.\pagIPLinkFGL4DebugOnHANNIBALDEV04VM_local.html
;URL2Read=.\pagIPLinkFGL4DebugOnHANNIBALDEV04_2_DEV06VM_local.html
;URL2Read=.\pagIPLinkFGL4DebugOnHANNIBALDEV04VM_2_DEV07VM_remote.html
;URL2Read=.\pagIPLinkFGL4DebugOnHANNIBALDEV05VM_2_DEV07VM_remote.html

[OVPN!01_Proxy];wird �ber readProxyEnabled() abgefragt.Nur wenn hier etwas drin steht, dann ist der Proxy enabled
;Ggf. zu verwendender Proxy
;ProxyHost=proxy.mettenmeier.de
ProxyHost=
ProxyPort=8080


[OVPN!01_Config] ; F�r das Program ProgConfigHandler.      Neu 20191218: Aus einem Fehler heraus geboren. Nun Kommentare und Leerzeichen hinter den Sections m�glich.
;Merke: Das wird wohl aus den Registrierungsinformationenen ausgelesen, anhand der Endung .ovpn fuer die Konfiguarationsdateien des OVPN-Programs.
;z.B. C:\Programme\OpenVPN\config\Template client_TCP_443.ovpn
;Merke: Leerstring bewirkt hier, dass nach der Application OVPN (anhand der registrierten Endung) gesucht wird. Dieser String wird dann genommen.
LocalMachineDirectoryRoot=
;Merke: Das ist das Verzeichnis im OVPN-Program Hautpverzeichnis
LocalMachineDirectoryChildConfig=config

;Merke: Das Template fuer die Erstellung liegt ggfs. in einem ganz anderen Verzeichnis oder gar im Jave-Projekt oder sogar in einer .jar Struktur.
DirectoryTemplate=resourceZZZ\template

[OVPN!01_ConfigValues];Werte werden als ifconfig in das Template eingetragen. Erst der remote Wert, dann der lokale Wert. Die Werte m�ssen mit der IPAdresse der OVPN-TAP Verbindung auf der jeweiligen Maschine (z.B. OpenVPN1, remote/lokal) �bereinstimmen
VpnIpRemote=10.0.0.1
VpnIpLocal=10.0.0.2
TapAdapterUsedLocal=OpenVPN2

;Merke: Diese Datei muss im Verzeichnis liegen: C:\Programme\OpenVPN\config
;Ist der Name hier leer wird dort ein defaultname basierend auf dem Computernamen erwartet:
;z.B.: HANNIBALDEV04VM_CLIENT.crt
CertifierFilename=<Z><Z:Call><Z:Java><Z:Class>basic.zBasic.util.machine.EnvironmentZZZ</Z:Class><Z:Method>getHostName</Z:Method></Z:Java></Z:Call></Z>_CLIENT.crt

;Merke: Diese Datei muss im Verzeichnis liegen: C:\Programme\OpenVPN\config
;Ist der Name hier leer wird dort ein defaultname basierend auf dem Computernamen erwartet:
;z.B.: HANNIBALDEV04VM_CLIENT.key
KeyFilename=<Z><Z:Call><Z:Java><Z:Class>basic.zBasic.util.machine.EnvironmentZZZ</Z:Class><Z:Method>getHostName</Z:Method></Z:Java></Z:Call></Z>_CLIENT.key


[OVPN!01_Check]
;Der Port, welcher als DEFAULT f?r den Check der VPN-Verbindung verwendet wird.
;Er muss beim Client und beim Server-Starter identisch sein
VPNPort2Check=5000

[OVPN!01_Scan]
;Die Portbereiche, die nach dem Verbindungsaufbau gescannt werden sollen.
;Merke: Ist f?r einen Bereich der Wert nicht gepflegt, so wird der PortScan nicht durchgef?hrt.
VPNPortLow=1
VPNPortHigh=61000
RemotePortLow=1
RemotePortHight=61000

#############################################################
### F?r lokales Intranet
#############################################################

[OVPN!02]
KernelLogPath=c:\fglKernel\KernelLog
KernelLogFile=ZKernelLog_ClientOVPN.txt

######## Modulkonfiguration ##############
;OpenVPN, weist auf das gleiche File
KernelConfigPath=<z:Null/>
KernelConfigFile=ZKernelConfig_OVPNClient.ini

;TODOGOON 20210203: Hier verkürzt auch einen Aliaswerte anbieten für den Modulnamen
;IP-Auslese-Dialogbox als Modul
KernelConfigPathuse.openvpn.clientui.component.IPExternalRead.DlgIPExternalOVPN=<z:Null/>
KernelConfigFileuse.openvpn.clientui.component.IPExternalRead.DlgIPExternalOVPN=ZKernelConfig_OVPNClient.ini

;Einstellungs-Dialogbox als Modul
KernelConfigPathuse.openvpn.component.shared.adjustment.DlgAdjustmentOVPN=<z:Null/>
KernelConfigFileuse.openvpn.component.shared.adjustment.DlgAdjustmentOVPN=ZKernelConfig_OVPNClient_DlgAdjustment.ini

;Beim ausfuehren der load-methode soll nach dem Hinzufuegen des TrayIcons, sofort schon mit dem Connect begonnen werden.
ConnectOnStart=0

;1=Enable port scan.
;Das Problem dabei ist, dass auf meinem Server dann teilweise die Scanns nicht mehr m?glich sind.
PortScanEnabled=0



####### Programmkonfigurationen ##########
#Auslesen der Adresse aus dem Web
ProgIPReader=OVPN!02_IP-READER

#Finden der OVPN Konfigurationsfiles
ProgConfigHandler=OVPN!01_Config

#Setzen von Werten in die OVPNKonfigurationsfiles
ProgConfigValues=OVPN!01_ConfigValues

#Ggfs anstellen eines Proxys
ProgProxyHandler=OVPN!01_Proxy

#Pr�fen der OVPN Verbindung
ProgVPNCheck=OVPN!01_Check

#Scannen der offenen Ports
ProgPortScan=OVPN!01_Scan

### Programmkonfiguration(en) (per Aliasnamen)
# Wenn in diesem File die Module definiert sind, dann koennen hier auch die einzelnen Programme der Module definiert werden.
# Das ist dann z.B. der Name eines Panels, einer Dialogbox, etc. ...
#
# Dieser Klassenname kann als Programname fuer eine Section verwendet werden.
# Es ist moeglich Aliaswerte zu definieren (die dann in die Section kommen).
# Schema: Klassenname oder Aliasname = Aliaswert
# Der Vorteil von Aliasnamen ist, das sie fuer mehrere 'Programme' verwendet werden koennen.
#
#Merke in dem Aliasnamen darf kein Semikolon auftauchen, sonst wird der Eintrag ab dem Semikolon als Kommentar gesehen
#Merke in dem Aliasnamen darf kein Unterstrich auftauchen, sonst wird der Teil hinter dem Unterstrick als Programname gesehen

;Das Panel selbst, zum Vorbelegen der Werte...
use.openvpn.clientui.component.IPExternalRead.PanelDlgIPExternalContentOVPN=IP-ClientContext
;Der Button zum Refreshen der Werte aus dem Web.
use.openvpn.clientui.component.IPExternalRead.ProgramIPContentOVPN=IP-ClientContext

;Der OK-Button zur Uebernahme des Werts in die INI-Datei
use.openvpn.clientui.component.IPExternalRead.ProgramIpWeb2iniOVPN=IP-ClientContext

;Das Panel für den Navigator im Menüpunkt "Einstellungen", wird in einer anderen Konfigurationsdatei definiert
;use.openvpn.component.shared.adjustment.PanelDlgAdjustmentNavigatorOVPN=AdjustmentNavigator


# Testprogramme, hier werden Aliasnamen definiert.
#
# Merke:
# Jeder Test ist als eigenes Programm definiert. D.h. Er hat in dieser Datei eine eigene Section.
# Das ist ein feststehender Name, der verwendet werden muss, wenn der Context aus dieser Configuration geholt werden soll.



[OVPN!02_IP-READER]
;Auszulesende Web-Seite
;URL2Read=file:///c:\1fgl\Workspace\Eclipse3FGL\OpenVPNZZZ\pagIPLinkFGL4DebugOnAlarich.html
;URL2Read=.\pagIPLinkFGL4DebugOnHANNIBALDEV04VM_2_DEV07VM_remote.html
;fuer Debug und Testzwecke
;URL2Read=http://fgl.homepage.t-online.de/debug/pagIPLinkFGL.html
;URL2Read=file:///<Z>[ProgPageCreate]CreationDirectory</Z>\\<Z>[ProgPageCreate]CreationFile</Z>
URL2Read=<Z>[IP-ClientContext]URL2Read</Z>
;URL2Read=.\pagIPLinkFGL4DebugOnHANNIBALDEV04VM_2_DEV06VM_local.html
;URL2Read=.\pagIPLinkFGL4DebugOnHANNIBALDEV05VM_2_DEV07VM_local.html
;URL2Read=.\pagIPLinkFGL4DebugOnHANNIBALDEV05VM_2_DEV06VM_remote.html
;URL2Read=.\pagIPLinkFGL4DebugOnHANNIBALDEV05VM_2_DEV07VM_remote.html

;Ggf. zu verwendender Proxy
ProxyHost=
;145.254.22.10
ProxyPort=8000


[OVPN!01_IP-ClientContext]
;Das ist die URL, in welcher die externe IP-Adresse des Servers gefunden werden kann.
;URL2Read=http://fgl.homepage.t-online.de/pagIPLinkFGL.html
;URL2Read=http://fgl.homepage.t-online.de/debug/pagIPLinkFGL.html

;Zu Testzwecken kann auch eine Datei als Quelle der IP-Adresse angegeben werden
;dort gibt es die Datei nicht mehrURL2Read=file:///C:\1fgl\Workspace\Eclipse3FGL\JAZVideoInternetArchive\pagIPLinkFGL4Debug.html
;URL2Read=C:\1fgl\repo_Eclipse4_v02\Projekt_Kernel02using_JAZVideoInternetArchive\JAZVideoInternetArchive\pagIPLinkFGL4Debug.html
;TODO GOON 20190207: KernelReaderURLZZZ, Zeile 299: ExceptionZZZ ez = new ExceptionZZZ("'URL-String to read' is not a valid URL: '" + this.getURLString() + "'", iERROR_PARAMETER_VALUE,   this, ReflectCodeZZZ.getMethodCurrentName());
;URL2Read=file:///c:\1fgl\Workspace\Eclipse3FGL\OpenVPNZZZ\pagIPLinkFGL4Debug.html

;Hier als relativer Pfad eine g?ltige URL...
;URL2Read=.\pagIPLinkFGL4DebugOnHANNIBALDEV04VM_local.html
;URL2Read=.\pagIPLinkFGL4DebugOnHANNIBALDEV04_2_DEV06VM_local.html
;URL2Read=.\pagIPLinkFGL4DebugOnHANNIBALDEV04VM_2_DEV07VM_remote.html
;URL2Read=.\pagIPLinkFGL4DebugOnHANNIBALDEV05VM_2_DEV07VM_remote.html



;Ggf. zu verwendender Proxy
;ProxyHost=145.254.22.10
ProxyHost=
ProxyPort=8000

;Die IP, welche in der URL2Read gefunden und dann hier abgespeichert wurde. Merke: In der Entwicklungsumgebung ist 192.168.3.101 zu verwenden
IPExternal=91.17.6.158

[IP-ClientContext]
;Das ist die URL, in welcher die externe IP-Adresse des Servers gefunden werden kann.
;URL2Read=http://fgl.homepage.t-online.de/pagIPLinkFGL.html
URL2Read=http://fgl.homepage.t-online.de/debug/pagIPLinkFGL.html

;Zu Testzwecken kann auch eine Datei als Quelle der IP-Adresse angegeben werden
;dort gibt es die Datei nicht mehrURL2Read=file:///C:\1fgl\Workspace\Eclipse3FGL\JAZVideoInternetArchive\pagIPLinkFGL4Debug.html
;URL2Read=C:\1fgl\repo_Eclipse4_v02\Projekt_Kernel02using_JAZVideoInternetArchive\JAZVideoInternetArchive\pagIPLinkFGL4Debug.html
;TODO GOON 20190207: KernelReaderURLZZZ, Zeile 299: ExceptionZZZ ez = new ExceptionZZZ("'URL-String to read' is not a valid URL: '" + this.getURLString() + "'", iERROR_PARAMETER_VALUE,   this, ReflectCodeZZZ.getMethodCurrentName());
;URL2Read=file:///c:\1fgl\Workspace\Eclipse3FGL\OpenVPNZZZ\pagIPLinkFGL4Debug.html

;Hier als relativer Pfad eine g?ltige URL...
;URL2Read=.\pagIPLinkFGL4DebugOnHANNIBALDEV04VM_local.html
;URL2Read=.\pagIPLinkFGL4DebugOnHANNIBALDEV04_2_DEV06VM_local.html
;URL2Read=.\pagIPLinkFGL4DebugOnHANNIBALDEV04VM_2_DEV07VM_remote.html
;URL2Read=.\pagIPLinkFGL4DebugOnHANNIBALDEV05VM_2_DEV07VM_remote.html

;Ggf. zu verwendender Proxy
;ProxyHost=145.254.22.10
ProxyHost=
ProxyPort=8000

;Die IP, welche in der URL2Read gefunden und dann hier abgespeichert wurde. Merke: In der Entwicklungsumgebung ist 192.168.3.101 zu verwenden
IPExternal=79.196.


[IP-ClientContext!02]
;Das ist die URL, in welcher die externe IP-Adresse des Servers gefunden werden kann.
;URL2Read=http://fgl.homepage.t-online.de/pagIPLinkFGL.html
URL2Read=http://fgl.homepage.t-online.de/debug/pagIPLinkFGL.html

;Zu Testzwecken kann auch eine Datei als Quelle der IP-Adresse angegeben werden
;dort gibt es die Datei nicht mehrURL2Read=file:///C:\1fgl\Workspace\Eclipse3FGL\JAZVideoInternetArchive\pagIPLinkFGL4Debug.html
;URL2Read=C:\1fgl\repo_Eclipse4_v02\Projekt_Kernel02using_JAZVideoInternetArchive\JAZVideoInternetArchive\pagIPLinkFGL4Debug.html
;TODO GOON 20190207: KernelReaderURLZZZ, Zeile 299: ExceptionZZZ ez = new ExceptionZZZ("'URL-String to read' is not a valid URL: '" + this.getURLString() + "'", iERROR_PARAMETER_VALUE,   this, ReflectCodeZZZ.getMethodCurrentName());
;URL2Read=file:///c:\1fgl\Workspace\Eclipse3FGL\OpenVPNZZZ\pagIPLinkFGL4Debug.html

;Hier als relativer Pfad eine g?ltige URL...
;URL2Read=.\pagIPLinkFGL4DebugOnHANNIBALDEV04VM_local.html
;URL2Read=.\pagIPLinkFGL4DebugOnHANNIBALDEV04_2_DEV06VM_local.html
;URL2Read=.\pagIPLinkFGL4DebugOnHANNIBALDEV04VM_2_DEV07VM_remote.html
;URL2Read=.\pagIPLinkFGL4DebugOnHANNIBALDEV05VM_2_DEV07VM_remote.html

;Ggf. zu verwendender Proxy
;ProxyHost=145.254.22.10
ProxyHost=
ProxyPort=8000

;Die IP, welche in der URL2Read gefunden und dann hier abgespeichert wurde. Merke: In der Entwicklungsumgebung ist 192.168.3.101 zu verwenden
IPExternal=84.163.254.106
